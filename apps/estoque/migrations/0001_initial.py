# Generated by Django 5.0.1 on 2025-07-09 14:17

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("cadastros", "0006_alter_produtomateriaprima_options_and_more"),
        ("contenttypes", "0002_remove_content_type_name"),
        ("core", "0004_configuracaobilling_alter_planoassinatura_options_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="CategoriaMateriaPrima",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "nome",
                    models.CharField(max_length=100, verbose_name="Nome da Categoria"),
                ),
                ("descricao", models.TextField(blank=True, verbose_name="Descrição")),
                (
                    "cor_hex",
                    models.CharField(
                        default="#3b82f6",
                        help_text="Cor hexadecimal para identificação visual",
                        max_length=7,
                        verbose_name="Cor",
                    ),
                ),
                ("ativo", models.BooleanField(default=True, verbose_name="Ativo")),
                (
                    "empresa",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.empresa",
                        verbose_name="Empresa",
                    ),
                ),
            ],
            options={
                "verbose_name": "Categoria de Matéria-Prima",
                "verbose_name_plural": "Categorias de Matérias-Primas",
                "ordering": ["nome"],
                "unique_together": {("empresa", "nome")},
            },
        ),
        migrations.CreateModel(
            name="InventarioFisico",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "numero",
                    models.CharField(
                        help_text="Gerado automaticamente",
                        max_length=20,
                        verbose_name="Número do Inventário",
                    ),
                ),
                (
                    "descricao",
                    models.CharField(
                        help_text="Ex: Inventário Mensal - Janeiro 2024",
                        max_length=255,
                        verbose_name="Descrição",
                    ),
                ),
                (
                    "data_abertura",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Data de Abertura"
                    ),
                ),
                (
                    "data_inicio",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Data de Início"
                    ),
                ),
                (
                    "data_finalizacao",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Data de Finalização"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ABERTO", "Aberto"),
                            ("EM_ANDAMENTO", "Em Andamento"),
                            ("FINALIZADO", "Finalizado"),
                            ("CANCELADO", "Cancelado"),
                        ],
                        default="ABERTO",
                        max_length=15,
                        verbose_name="Status",
                    ),
                ),
                (
                    "incluir_zerados",
                    models.BooleanField(
                        default=False,
                        help_text="Se marcado, inclui matérias-primas com estoque zerado",
                        verbose_name="Incluir Itens Zerados",
                    ),
                ),
                (
                    "observacoes",
                    models.TextField(blank=True, verbose_name="Observações"),
                ),
                (
                    "categoria_filtro",
                    models.ForeignKey(
                        blank=True,
                        help_text="Se selecionado, inventário apenas desta categoria",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="estoque.categoriamateriaprima",
                        verbose_name="Filtrar por Categoria",
                    ),
                ),
                (
                    "empresa",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.empresa",
                        verbose_name="Empresa",
                    ),
                ),
                (
                    "responsavel",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Responsável",
                    ),
                ),
            ],
            options={
                "verbose_name": "Inventário Físico",
                "verbose_name_plural": "Inventários Físicos",
                "ordering": ["-data_abertura"],
                "unique_together": {("empresa", "numero")},
            },
        ),
        migrations.CreateModel(
            name="MateriaPrima",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "codigo",
                    models.CharField(
                        help_text="Código interno da matéria-prima",
                        max_length=20,
                        verbose_name="Código",
                    ),
                ),
                (
                    "codigo_barras",
                    models.CharField(
                        blank=True,
                        help_text="Código de barras ou QR Code (opcional)",
                        max_length=100,
                        null=True,
                        verbose_name="Código de Barras",
                    ),
                ),
                (
                    "descricao",
                    models.CharField(
                        max_length=255, verbose_name="Descrição da Matéria-Prima"
                    ),
                ),
                (
                    "unidade",
                    models.CharField(
                        choices=[
                            ("UN", "Unidade"),
                            ("PC", "Peça"),
                            ("MT", "Metro"),
                            ("M2", "Metro Quadrado"),
                            ("M3", "Metro Cúbico"),
                            ("KG", "Quilograma"),
                            ("G", "Grama"),
                            ("LT", "Litro"),
                            ("ML", "Mililitro"),
                            ("CX", "Caixa"),
                            ("PCT", "Pacote"),
                            ("RL", "Rolo"),
                        ],
                        default="UN",
                        max_length=3,
                        verbose_name="Unidade de Medida",
                    ),
                ),
                (
                    "quantidade_atual",
                    models.DecimalField(
                        decimal_places=3,
                        default=0,
                        help_text="Calculado automaticamente pelas movimentações.",
                        max_digits=12,
                        verbose_name="Quantidade Atual em Estoque",
                    ),
                ),
                (
                    "estoque_minimo",
                    models.DecimalField(
                        decimal_places=3,
                        default=0,
                        help_text="Quantidade mínima para alerta de reposição",
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Estoque Mínimo",
                    ),
                ),
                (
                    "estoque_maximo",
                    models.DecimalField(
                        decimal_places=3,
                        default=0,
                        help_text="Quantidade máxima recomendada",
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Estoque Máximo",
                    ),
                ),
                (
                    "custo_medio_ponderado",
                    models.DecimalField(
                        decimal_places=4,
                        default=0,
                        help_text="Calculado automaticamente baseado nas entradas",
                        max_digits=12,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Custo Médio Ponderado",
                    ),
                ),
                (
                    "custo_ultima_compra",
                    models.DecimalField(
                        decimal_places=4,
                        default=0,
                        max_digits=12,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Custo da Última Compra",
                    ),
                ),
                (
                    "controlar_lote",
                    models.BooleanField(
                        default=False,
                        help_text="Se marcado, será obrigatório informar lote nas movimentações",
                        verbose_name="Controlar por Lote",
                    ),
                ),
                (
                    "tem_validade",
                    models.BooleanField(
                        default=False,
                        help_text="Se marcado, será controlada a validade dos lotes",
                        verbose_name="Possui Validade",
                    ),
                ),
                (
                    "observacoes",
                    models.TextField(blank=True, verbose_name="Observações"),
                ),
                ("ativo", models.BooleanField(default=True, verbose_name="Ativo")),
                (
                    "categoria",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="estoque.categoriamateriaprima",
                        verbose_name="Categoria",
                    ),
                ),
                (
                    "empresa",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.empresa",
                        verbose_name="Empresa",
                    ),
                ),
                (
                    "fornecedor_preferencial",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="cadastros.fornecedor",
                        verbose_name="Fornecedor Preferencial",
                    ),
                ),
            ],
            options={
                "verbose_name": "Matéria-Prima",
                "verbose_name_plural": "Matérias-Primas",
                "ordering": ["descricao"],
            },
        ),
        migrations.CreateModel(
            name="LoteMateriaPrima",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "numero_lote",
                    models.CharField(
                        help_text="Número/código do lote do fornecedor",
                        max_length=50,
                        verbose_name="Número do Lote",
                    ),
                ),
                (
                    "lote_interno",
                    models.CharField(
                        blank=True,
                        help_text="Código interno para controle",
                        max_length=20,
                        verbose_name="Lote Interno",
                    ),
                ),
                (
                    "data_fabricacao",
                    models.DateField(verbose_name="Data de Fabricação"),
                ),
                (
                    "data_validade",
                    models.DateField(
                        blank=True, null=True, verbose_name="Data de Validade"
                    ),
                ),
                (
                    "data_entrada",
                    models.DateField(auto_now_add=True, verbose_name="Data de Entrada"),
                ),
                (
                    "quantidade_inicial",
                    models.DecimalField(
                        decimal_places=3,
                        help_text="Quantidade recebida no lote",
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Quantidade Inicial",
                    ),
                ),
                (
                    "custo_unitario",
                    models.DecimalField(
                        decimal_places=4,
                        help_text="Custo unitário na entrada",
                        max_digits=12,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Custo Unitário",
                    ),
                ),
                (
                    "numero_nota_fiscal",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Número da Nota Fiscal"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ATIVO", "Ativo"),
                            ("VENCIDO", "Vencido"),
                            ("BLOQUEADO", "Bloqueado"),
                            ("ESGOTADO", "Esgotado"),
                        ],
                        default="ATIVO",
                        max_length=10,
                        verbose_name="Status",
                    ),
                ),
                (
                    "bloqueado",
                    models.BooleanField(
                        default=False,
                        help_text="Lote bloqueado para uso",
                        verbose_name="Bloqueado",
                    ),
                ),
                (
                    "motivo_bloqueio",
                    models.TextField(blank=True, verbose_name="Motivo do Bloqueio"),
                ),
                (
                    "localizacao",
                    models.CharField(
                        blank=True,
                        help_text="Ex: Estante A, Prateleira 3",
                        max_length=100,
                        verbose_name="Localização",
                    ),
                ),
                (
                    "observacoes",
                    models.TextField(blank=True, verbose_name="Observações"),
                ),
                (
                    "empresa",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.empresa",
                        verbose_name="Empresa",
                    ),
                ),
                (
                    "fornecedor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="cadastros.fornecedor",
                        verbose_name="Fornecedor",
                    ),
                ),
                (
                    "materia_prima",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="lotes",
                        to="estoque.materiaprima",
                        verbose_name="Matéria-Prima",
                    ),
                ),
            ],
            options={
                "verbose_name": "Lote de Matéria-Prima",
                "verbose_name_plural": "Lotes de Matérias-Primas",
                "ordering": ["-data_entrada", "numero_lote"],
            },
        ),
        migrations.CreateModel(
            name="ItemInventario",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "quantidade_sistema",
                    models.DecimalField(
                        decimal_places=3,
                        help_text="Quantidade registrada no sistema",
                        max_digits=10,
                        verbose_name="Quantidade no Sistema",
                    ),
                ),
                (
                    "quantidade_fisica",
                    models.DecimalField(
                        decimal_places=3,
                        default=0,
                        help_text="Quantidade contada fisicamente",
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Quantidade Física",
                    ),
                ),
                ("contado", models.BooleanField(default=False, verbose_name="Contado")),
                (
                    "data_contagem",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Data da Contagem"
                    ),
                ),
                (
                    "custo_unitario",
                    models.DecimalField(
                        decimal_places=4,
                        default=0,
                        help_text="Custo no momento do inventário",
                        max_digits=12,
                        verbose_name="Custo Unitário",
                    ),
                ),
                (
                    "observacoes",
                    models.TextField(
                        blank=True, verbose_name="Observações da Contagem"
                    ),
                ),
                (
                    "empresa",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.empresa",
                        verbose_name="Empresa",
                    ),
                ),
                (
                    "inventario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="itens",
                        to="estoque.inventariofisico",
                        verbose_name="Inventário",
                    ),
                ),
                (
                    "usuario_contagem",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Usuário que Contou",
                    ),
                ),
                (
                    "materia_prima",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="estoque.materiaprima",
                        verbose_name="Matéria-Prima",
                    ),
                ),
            ],
            options={
                "verbose_name": "Item do Inventário",
                "verbose_name_plural": "Itens do Inventário",
                "ordering": ["materia_prima__descricao"],
            },
        ),
        migrations.CreateModel(
            name="MovimentacaoEstoque",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "data_movimento",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Data e Hora do Movimento"
                    ),
                ),
                (
                    "tipo_movimento",
                    models.CharField(
                        choices=[
                            ("ENTRADA_COMPRA", "Entrada por Compra"),
                            ("ENTRADA_DEVOLUCAO", "Entrada por Devolução"),
                            ("ENTRADA_AJUSTE", "Entrada por Ajuste"),
                            ("ENTRADA_INVENTARIO", "Entrada por Inventário"),
                            ("ENTRADA_PRODUCAO", "Entrada por Produção"),
                            ("ENTRADA_TRANSFERENCIA", "Entrada por Transferência"),
                            ("SAIDA_PRODUCAO", "Saída para Produção"),
                            ("SAIDA_VENDA", "Saída para Venda"),
                            ("SAIDA_PERDA", "Saída por Perda/Dano"),
                            ("SAIDA_AJUSTE", "Saída por Ajuste"),
                            ("SAIDA_INVENTARIO", "Saída por Inventário"),
                            ("SAIDA_DEVOLUCAO", "Saída por Devolução"),
                            ("SAIDA_TRANSFERENCIA", "Saída por Transferência"),
                            ("SAIDA_CONSUMO", "Saída por Consumo Interno"),
                            ("TRANSFERENCIA_ENTRADA", "Transferência - Entrada"),
                            ("TRANSFERENCIA_SAIDA", "Transferência - Saída"),
                        ],
                        max_length=25,
                        verbose_name="Tipo de Movimento",
                    ),
                ),
                (
                    "quantidade",
                    models.DecimalField(
                        decimal_places=3,
                        help_text="Positivo para entradas, negativo para saídas",
                        max_digits=10,
                        verbose_name="Quantidade Movimentada",
                    ),
                ),
                (
                    "custo_unitario",
                    models.DecimalField(
                        decimal_places=4,
                        default=0,
                        help_text="Custo no momento da transação",
                        max_digits=12,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Custo Unitário",
                    ),
                ),
                (
                    "numero_documento",
                    models.CharField(
                        blank=True,
                        help_text="Nota fiscal, pedido, etc.",
                        max_length=50,
                        verbose_name="Número do Documento",
                    ),
                ),
                ("object_id", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "observacoes",
                    models.TextField(blank=True, verbose_name="Observações"),
                ),
                (
                    "motivo_ajuste",
                    models.TextField(
                        blank=True,
                        help_text="Obrigatório para ajustes manuais",
                        verbose_name="Motivo do Ajuste",
                    ),
                ),
                (
                    "cancelada",
                    models.BooleanField(
                        default=False, verbose_name="Movimentação Cancelada"
                    ),
                ),
                (
                    "data_cancelamento",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Data do Cancelamento"
                    ),
                ),
                (
                    "motivo_cancelamento",
                    models.TextField(blank=True, verbose_name="Motivo do Cancelamento"),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="Endereço IP"
                    ),
                ),
                ("user_agent", models.TextField(blank=True, verbose_name="User Agent")),
                (
                    "content_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "empresa",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.empresa",
                        verbose_name="Empresa",
                    ),
                ),
                (
                    "lote",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="estoque.lotemateriaprima",
                        verbose_name="Lote",
                    ),
                ),
                (
                    "materia_prima",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="movimentacoes",
                        to="estoque.materiaprima",
                        verbose_name="Matéria-Prima",
                    ),
                ),
                (
                    "usuario",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Usuário Responsável",
                    ),
                ),
                (
                    "usuario_cancelamento",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="movimentacoes_canceladas",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Usuário que Cancelou",
                    ),
                ),
            ],
            options={
                "verbose_name": "Movimentação de Estoque",
                "verbose_name_plural": "Movimentações de Estoque (Kardex)",
                "ordering": ["-data_movimento", "-pk"],
            },
        ),
        migrations.AddIndex(
            model_name="materiaprima",
            index=models.Index(
                fields=["empresa", "ativo"], name="estoque_mat_empresa_ac7119_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="materiaprima",
            index=models.Index(fields=["codigo"], name="estoque_mat_codigo_7c08cb_idx"),
        ),
        migrations.AddIndex(
            model_name="materiaprima",
            index=models.Index(
                fields=["descricao"], name="estoque_mat_descric_2aa11f_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="materiaprima",
            unique_together={("empresa", "codigo")},
        ),
        migrations.AddIndex(
            model_name="lotemateriaprima",
            index=models.Index(
                fields=["numero_lote"], name="estoque_lot_numero__684351_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="lotemateriaprima",
            index=models.Index(
                fields=["data_validade"], name="estoque_lot_data_va_b4b990_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="lotemateriaprima",
            index=models.Index(fields=["status"], name="estoque_lot_status_eace71_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="lotemateriaprima",
            unique_together={("empresa", "materia_prima", "numero_lote")},
        ),
        migrations.AlterUniqueTogether(
            name="iteminventario",
            unique_together={("inventario", "materia_prima")},
        ),
        migrations.AddIndex(
            model_name="movimentacaoestoque",
            index=models.Index(
                fields=["empresa", "data_movimento"],
                name="estoque_mov_empresa_2fc03a_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="movimentacaoestoque",
            index=models.Index(
                fields=["materia_prima", "data_movimento"],
                name="estoque_mov_materia_8dd11e_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="movimentacaoestoque",
            index=models.Index(
                fields=["tipo_movimento"], name="estoque_mov_tipo_mo_6231ac_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="movimentacaoestoque",
            index=models.Index(
                fields=["cancelada"], name="estoque_mov_cancela_147fe5_idx"
            ),
        ),
    ]
